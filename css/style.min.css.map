{"version":3,"sources":["base/_base.scss","style.scss","modules/sprite.scss"],"names":[],"mappings":"AAQA,KACI,eAToB,CAUpB,YAAa,CAChB,GAGG,UAbU,CAcV,cAZU,CAaV,iBAZQ,CAaR,iBAAkB,CACrB,EAEG,UAnBU,CAoBV,cAnBY,CAoBZ,iBAlBQ,CCDZ,MCuFE,+CAAuB,CALvB,2BAhEyB,CAsDzB,YAtDiC,CA0DjC,YA1DwC,CDhBtC,kBAAmB,CACtB,OCoFC,+CAAuB,CALvB,2BAhEyB,CAsDzB,YAtDiC,CA0DjC,YA1DwC,CAsFtC,OAjBF,+CAAuB,CALvB,+BArDgC,CA2ChC,YA3CwC,CA+CxC,YA/C+C,CA2E7C,OAjBF,+CAAuB,CALvB,8BA1C8B,CAgC9B,WAhCqC,CAoCrC,YApC4C,CDlC9C,MACI,aAAc","file":"style.min.css","sourcesContent":["$color-1:rgb(17, 17, 17);\n$color-2:white;\n$font-small:18px;\n$font-big:30px;\n$typo: arial;\n\n\n\nbody{\n    background: $color-1;\n    height: 400vh;\n}\n\nh1 {\n    color: $color-2;\n    font-size: $font-big;\n    font-family: $typo;\n    text-align: center;\n}\np {\n    color: $color-2;\n    font-size: $font-small;\n    font-family: $typo;\n}","@import 'base/_base.scss';\n@import 'modules/sprite.scss';\n\n.hhhh{\n    @include sprite($img-1);\n    margin-bottom: 30px;\n}\n@include sprites($spritesheet-sprites);\n\n.icon{\n    display: block;\n}","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$img-1-name: 'img-1';\n$img-1-x: 0px;\n$img-1-y: 0px;\n$img-1-offset-x: 0px;\n$img-1-offset-y: 0px;\n$img-1-width: 1451px;\n$img-1-height: 922px;\n$img-1-total-width: 2902px;\n$img-1-total-height: 1186px;\n$img-1-image: '../img/sprites/sprite.png';\n$img-1: (0px, 0px, 0px, 0px, 1451px, 922px, 2902px, 1186px, '../img/sprites/sprite.png', 'img-1', );\n$img-2-name: 'img-2';\n$img-2-x: 1451px;\n$img-2-y: 0px;\n$img-2-offset-x: -1451px;\n$img-2-offset-y: 0px;\n$img-2-width: 1451px;\n$img-2-height: 922px;\n$img-2-total-width: 2902px;\n$img-2-total-height: 1186px;\n$img-2-image: '../img/sprites/sprite.png';\n$img-2: (1451px, 0px, -1451px, 0px, 1451px, 922px, 2902px, 1186px, '../img/sprites/sprite.png', 'img-2', );\n$img-3-name: 'img-3';\n$img-3-x: 0px;\n$img-3-y: 922px;\n$img-3-offset-x: 0px;\n$img-3-offset-y: -922px;\n$img-3-width: 651px;\n$img-3-height: 264px;\n$img-3-total-width: 2902px;\n$img-3-total-height: 1186px;\n$img-3-image: '../img/sprites/sprite.png';\n$img-3: (0px, 922px, 0px, -922px, 651px, 264px, 2902px, 1186px, '../img/sprites/sprite.png', 'img-3', );\n$spritesheet-width: 2902px;\n$spritesheet-height: 1186px;\n$spritesheet-image: '../img/sprites/sprite.png';\n$spritesheet-sprites: ($img-1, $img-2, $img-3, );\n$spritesheet: (2902px, 1186px, '../img/sprites/sprite.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n"]}